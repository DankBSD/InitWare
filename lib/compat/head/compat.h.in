#ifndef COMPAT_H_IN_
#define COMPAT_H_IN_

#include <sys/types.h>
#include <errno.h>

#cmakedefine Sys_Plat_Linux
#cmakedefine Sys_Plat_BSD
#cmakedefine Sys_Plat_FreeBSD
#cmakedefine Sys_Plat_NetBSD
#cmakedefine Sys_Plat_DragonFlyBSD
#cmakedefine Sys_Plat_OpenBSD
#cmakedefine Sys_Plat_HPUX

#cmakedefine Have_asm_types_h
#cmakedefine Have_linux_netlink_h
#cmakedefine Have_linux_sched_h
#cmakedefine Have_sys_endian_h
#cmakedefine Have_sys_procctl_h
#cmakedefine Have_sys_prctl_h
#cmakedefine Have_sys_statvfs_h
#cmakedefine Have_sys_sysmacros_h
#cmakedefine Have sys_vfs_h
#cmakedefine Have_alloca_h
#cmakedefine Have_endian_h
#cmakedefine Have_malloc_h
#cmakedefine Have_mntent_h
#cmakedefine Have_mqueue_h

#cmakedefine Have___compar_fn_t

#cmakedefine Have_environ
#cmakedefine Have_waitid
#cmakedefine Have_posix_fallocate
#cmakedefine Have_get_current_dir_name
#cmakedefine Have_program_invocation_short_name
#cmakedefine Have_mempcpy
#cmakedefine Have___secure_getenv
#cmakedefine Have_secure_getenv
#cmakedefine Have_statfs
#cmakedefine Have_statvfs

#cmakedefine Use_capabilities

#define PACKAGE_NAME "@PACKAGE_NAME@"
#define PACKAGE_VERSION "@PACKAGE_VERSION@"
#define PACKAGE_STRING "@PACKAGE_STRING@"

#define DISTRIBUTION "@DISTRIBUTION@"

#define PKGSYSCONFDIR "@pkgsysconfdir@"

#define SYSTEM_CONFIG_FILE "@SYSTEM_CONFIG_FILE@"
#define SYSTEM_CONFIG_UNIT_PATH "@SYSTEM_CONFIG_UNIT_PATH@"
#define SYSTEM_DATA_UNIT_PATH "@SYSTEM_DATA_UNIT_PATH@"
#define SYSTEM_GENERATOR_PATH "@SYSTEM_GENERATOR_PATH@"

#define USER_CONFIG_FILE "@USER_CONFIG_FILE@"
#define USER_CONFIG_UNIT_PATH "@USER_CONFIG_UNIT_PATH@"
#define USER_DATA_UNIT_PATH "@USER_DATA_UNIT_PATH@"
#define USER_GENERATOR_PATH "@USER_GENERATOR_PATH@"

#define SYSTEMD_BINARY_PATH "@SYSTEMD_BINARY_PATH@"
#define SYSTEMD_CGROUP_AGENT_PATH "@SYSTEMD_CGROUP_AGENT_PATH"
#define SYSTEMD_SHUTDOWN_BINARY_PATH "@SYSTEMD_SHUTDOWN_BINARY_PATH@"
#define SYSTEMD_TTY_ASK_PASSWORD_AGENT_BINARY_PATH "@SYSTEMD_TTY_ASK_PASSWORD_AGENT_BINARY_PATH@"
#define SYSTEMD_STDIO_BRIDGE_BINARY_PATH "@SYSTEMD_STDIO_BRIDGE_BINARY_PATH@"

#define POLKIT_AGENT_BINARY_PATH "@POLKIT_AGENT_BINARY_PATH@"

#define NOTIFY_SOCKET "@NOTIFY_SOCKET@"

#ifdef Sys_Plat_FreeBSD
#        define _PATH_UTMPX "/var/run/utx.active"
#endif

#ifndef Have___compar_fn_t
typedef int (*__compar_fn_t)(const void *, const void *);
#endif

#ifndef Have_environ
extern char **environ;
#endif

#ifndef Have_mempcpy
void *mempcpy(void *dest, const void *src, size_t n);
#endif

#ifndef Have_secure_getenv
#        define secure_getenv getenv
#endif

#ifndef Have_statfs
#        define statfs statvfs
#        define fstatfs fstatvfs
#endif

#ifndef Have_program_invocation_short_name
#        define program_invocation_short_name getprogname()
#endif

#ifndef Have_get_current_dir_name
#        define get_current_dir_name() getcwd(NULL, 0)
#endif

#ifndef EBADR
#        define EBADR EBADF
#endif

#ifndef ETIME
#        define ETIME ETIMEDOUT
#else
#        define Have_ETIME
#endif

#ifdef Sys_Plat_Linux
#        define Use_CGroups
#        define Use_Linprocfs
#endif

#ifdef Sys_Plat_Linux
#        define Dgram_Credpass_Linux
#elif defined(Sys_Plat_NetBSD)
#        define Dgram_Credpass_NetBSD
#elif defined(Sys_Plat_FreeBSD)
#        define Dgram_Credpass_FreeBSD
#else
#        define Dgram_Credpass_None
#endif

#ifndef strndupa
/* from: */
/*
 * Author: Christian Storm
 * Copyright (C) 2018, Siemens AG
 *
 * SPDX-License-Identifier:     GPL-2.0-or-later
 */

/*
 * Define char *strndupa(const char *s, size_t n)
 * for, e.g., musl (https://www.musl-libc.org/)
 * which does not bother to implement this function.
 */
#        define strndupa(s, n)                                   \
                (__extension__({                                 \
                        const char *__in = (s);                  \
                        size_t __len = strnlen(__in, (n)) + 1;   \
                        char *__out = (char *) alloca(__len);    \
                        __out[__len - 1] = '\0';                 \
                        (char *) memcpy(__out, __in, __len - 1); \
                }))
#endif

#ifndef strdupa
#        define strdupa(s) strndupa(s, strlen(s))
#endif

#endif